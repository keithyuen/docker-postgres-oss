version: '3.8'

services:
  certgen:
    build: ./certgen
    container_name: certgen
    volumes:
      - ./certs:/certs
    restart: "no"

  postgres:
    image: postgres:17.4
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER_FILE: /run/secrets/pg_user
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/pg_pw
      TZ: Asia/Singapore
      PGTZ: Asia/Singapore
    secrets:
      - pg_user
      - pg_pw
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./logs:/var/log/postgresql
      - ./certs:/var/lib/postgresql/certs:ro
      - ./sql:/docker-entrypoint-initdb.d
    depends_on:
      - certgen
    command: >
      postgres -c ssl=on
               -c ssl_cert_file=/var/lib/postgresql/certs/server.crt
               -c ssl_key_file=/var/lib/postgresql/certs/server.key
               -c logging_collector=on
               -c log_directory='/var/log/postgresql'
               -c log_filename=postgresql.log
               -c log_statement=all
               -c log_connections=on
               -c log_disconnections=on
               -c log_destination='stderr,csvlog'
               -c log_rotation_age=1d
               -c shared_preload_libraries=pg_stat_statements
               -c pg_stat_statements.track=all
    restart: unless-stopped
    # network_mode: "host"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@local.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json
      - ./pgadmin/pgpass:/pgpass
    ports:
      - "5050:80"
    restart: unless-stopped
    depends_on:
      - postgres

secrets:
  pg_user:
    file: ./secrets/pg_user.txt
  pg_pw:
    file: ./secrets/pg_pw.txt

volumes:
  pgadmin_data: